// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/jwt/update": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jwt"
                ],
                "summary": "Update Access JWT token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh token cookie",
                        "name": "refresh",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SingleAccessToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/cart/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Get user's cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token for authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Cart"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Remove the product from the cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token for authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "info about a product to remove",
                        "name": "obj",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.RemoveFromCartInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/cart/item/:id": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Add the requested quantity of items to the cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token for authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "info about a product to add",
                        "name": "obj",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.AddToCartInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Set the product with the provided quantity to a cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token for authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "info about a product to add",
                        "name": "obj",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.AddToCartInput"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "id of the product to add to cart",
                        "name": "ID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Remove the requested quantity of items from the cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token for authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "info about a product to add",
                        "name": "obj",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.AddToCartInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/categories/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/comment/parent/:id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Get answers on comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the comment",
                        "name": "comment_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.GetAnswersInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "access token for user is used to check your reaction, is not required",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outputs.CommentsOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/comment/product/:id": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Get root comments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the product",
                        "name": "product_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "access token for user is used to check your reaction, is not required",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outputs.CommentsOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Add comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the product",
                        "name": "product_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.AddCommentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/cpus/add": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cpus"
                ],
                "summary": "Add a new cpu",
                "parameters": [
                    {
                        "description": "Cpu data",
                        "name": "laptop",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.AddCpuInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "access token for user with Admin role",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/laptops/add": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "laptops"
                ],
                "summary": "Add a new laptop",
                "parameters": [
                    {
                        "description": "Laptop data",
                        "name": "laptop",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.AddLaptopInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "access token for user with Admin role",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/media/upload": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Upload media",
                "parameters": [
                    {
                        "type": "file",
                        "description": "files to upload",
                        "name": "uploads[]",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.Locations"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/products/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get products from page N in quantity M",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outputs.GetProductsResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/products/chars/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product chars",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get a single product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outputs.ProductWithChars"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/profile/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token for authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Profile"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/reactions/:id": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reactions"
                ],
                "summary": "Add, change or delete reaction from a comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the comment",
                        "name": "comment_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.SetReactionInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "access token for user is used to check your reaction, is not required",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "User data to login",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.LoginUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outputs.LoginResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new User",
                "parameters": [
                    {
                        "description": "User data to register",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inputs.RegisterUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outputs.LoginResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.PublicPCCError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Locations": {
            "type": "object",
            "properties": {
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.SingleAccessToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "errors.ErrorCode": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32
            ],
            "x-enum-varnames": [
                "EC_INTERNAL",
                "EC_DB_UNIQUE_FAIL",
                "EC_DB_NOT_FOUND_ERROR",
                "EC_DB_WRONG_CHARS_TABLE_NAME",
                "EC_DB_ROLE_ERROR",
                "EC_DB_OTHER",
                "EC_CTRLS_INPUT_ERROR",
                "EC_CTRLS_NO_USER_DATA_ERROR",
                "EC_REDIS_NIL",
                "EC_REDIS_OTHER",
                "EC_REDIS_WRONG_VALUE",
                "EC_JSON_MARSHAL_ERROR",
                "EC_JSON_UNMARSHAL_ERROR",
                "EC_JWT_TOKEN_MALFORMED",
                "EC_JWT_TOKEN_EXPIRED",
                "EC_JWT_TOKEN_NOT_VALID_YET",
                "EC_UNKNOWN_JWT_TOKEN_ERROR",
                "EC_JWT_ERROR_TOKEN_TYPE",
                "EC_HEADER_MISSING",
                "EC_ATOI_NOT_AN_UINT",
                "EC_ATOI_RANGE_ERROR",
                "EC_ATOI_UNKNOWN",
                "EC_ROLE_LOWER",
                "EC_BIND_EMAIL_VALIDATION_ERROR",
                "EC_BIND_OTHER_VALIDATION_ERROR",
                "EC_JSON_SYNTAX_ERROR",
                "EC_CTRLS_UNEXPECTED_EMPTY_BODY",
                "EC_DB_LOGIN_ERROR",
                "EC_COOKIE_MISSING",
                "EC_UNKNOWN_MINIO_ERROR",
                "EC_MINIO_NOT_FOUNT",
                "EC_DB_CART_QUANTITY_ERROR",
                "EC_NOT_YOUR_COMMENT"
            ]
        },
        "errors.ErrorKind": {
            "type": "string",
            "enum": [
                "internal",
                "database",
                "jwt",
                "controllers",
                "redis",
                "json",
                "header",
                "atoi",
                "roles",
                "cookie",
                "minio"
            ],
            "x-enum-varnames": [
                "EK_INTERNAL",
                "EK_DATABASE",
                "EK_JWT",
                "EK_CTRLS",
                "EK_REDIS",
                "EK_JSON",
                "EK_HEADER",
                "EK_ATOI",
                "EK_ROLES",
                "EK_COOKIE",
                "EK_MINIO"
            ]
        },
        "errors.PublicPCCError": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code represents the error code in terms of this project\nIt should NEVER contain the inner code from the database drive or something similar",
                    "allOf": [
                        {
                            "$ref": "#/definitions/errors.ErrorCode"
                        }
                    ]
                },
                "details": {
                    "description": "Details may provide more details about the error but should NEVER contain the secret or\nsensetive data"
                },
                "kind": {
                    "description": "Kind represents the information about the module or the step on which the error occured",
                    "allOf": [
                        {
                            "$ref": "#/definitions/errors.ErrorKind"
                        }
                    ]
                },
                "message": {
                    "description": "SafeMessage contains the summary message that should be safe",
                    "type": "string"
                }
            }
        },
        "inputs.AddCommentInput": {
            "type": "object",
            "properties": {
                "answer": {
                    "description": "Medias    models.Medias ` + "`" + `json:\"medias\"` + "`" + `",
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "inputs.AddCpuInput": {
            "type": "object",
            "properties": {
                "base_e_freq_mhz": {
                    "type": "integer"
                },
                "base_p_freq_mhz": {
                    "type": "integer"
                },
                "cpu_name": {
                    "type": "string"
                },
                "ecores": {
                    "type": "integer"
                },
                "l1_kb": {
                    "type": "integer"
                },
                "l2_kb": {
                    "type": "integer"
                },
                "l3_kb": {
                    "type": "integer"
                },
                "max_e_freq_mhz": {
                    "type": "integer"
                },
                "max_p_freq_mhz": {
                    "type": "integer"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.InputMedia"
                    }
                },
                "name": {
                    "type": "string"
                },
                "pcores": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "release_year": {
                    "type": "integer"
                },
                "socket": {
                    "$ref": "#/definitions/models.CpuSocket"
                },
                "stock": {
                    "type": "integer"
                },
                "tdp_watt": {
                    "type": "integer"
                },
                "tecproc_nm": {
                    "type": "integer"
                },
                "threads": {
                    "type": "integer"
                }
            }
        },
        "inputs.AddLaptopInput": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "gpu": {
                    "type": "integer"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.InputMedia"
                    }
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "ram": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "inputs.AddToCartInput": {
            "type": "object",
            "properties": {
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "inputs.GetAnswersInput": {
            "type": "object",
            "required": [
                "limit"
            ],
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "inputs.LoginUserInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "remember": {
                    "type": "boolean"
                }
            }
        },
        "inputs.RegisterUserInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "remember": {
                    "type": "boolean"
                }
            }
        },
        "inputs.RemoveFromCartInput": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "inputs.SetReactionInput": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/models.ReactionType"
                }
            }
        },
        "models.Cart": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CartItem"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.CartItem": {
            "type": "object",
            "properties": {
                "added_at": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.CharsDescription": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Comment": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "children_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Media"
                    }
                },
                "rating": {
                    "type": "integer"
                },
                "reactions": {
                    "$ref": "#/definitions/models.CommentReactions"
                },
                "text": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.CommentReactions": {
            "type": "object",
            "properties": {
                "reactions_amount": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "your_reaction": {
                    "$ref": "#/definitions/models.ReactionType"
                }
            }
        },
        "models.CpuSocket": {
            "type": "string",
            "enum": [
                "AM4",
                "AM5",
                "LGA775",
                "LGA1156",
                "LGA1155",
                "LGA1150",
                "LGA1151",
                "LGA1151v2",
                "LGA1200",
                "LGA1700",
                "LGA1851",
                "BGA1964",
                "FL1",
                "BGA2049",
                "BGA2833",
                "UNKNOWN"
            ],
            "x-enum-varnames": [
                "SOCKET_AM4",
                "SOCKET_AM5",
                "SOCKET_LGA775",
                "SOCKET_LGA1156",
                "SOCKET_LGA1155",
                "SOCKET_LGA1150",
                "SOCKET_LGA1151",
                "SOCKET_LGA1151v2",
                "SOCKET_LGA1200",
                "SOCKET_LGA1700",
                "SOCKET_LGA1851",
                "SOCKET_BGA1964",
                "SOCKET_FL1",
                "SOCKET_BGA2049",
                "SOCKET_BGA2833",
                "SOCKET_UNKNOWN"
            ]
        },
        "models.InputMedia": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/models.MediaType"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.Media": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/models.MediaType"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.MediaType": {
            "type": "string",
            "enum": [
                "Image",
                "Video"
            ],
            "x-enum-varnames": [
                "MediaImage",
                "MediaVideo"
            ]
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Media"
                    }
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "selled": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "models.Profile": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/models.PublicUser"
                }
            }
        },
        "models.PublicUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.UserRole"
                }
            }
        },
        "models.ReactionType": {
            "type": "string",
            "enum": [
                "like",
                "dislike"
            ],
            "x-enum-varnames": [
                "REACTION_LIKE",
                "REACTION_DISLIKE"
            ]
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_role": {
                    "$ref": "#/definitions/models.UserRole"
                }
            }
        },
        "models.UserRole": {
            "type": "string",
            "enum": [
                "Temporary",
                "Default",
                "Admin"
            ],
            "x-enum-varnames": [
                "Temporary",
                "Default",
                "Admin"
            ]
        },
        "outputs.CommentsOutput": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                }
            }
        },
        "outputs.GetProductsResult": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                }
            }
        },
        "outputs.LoginResult": {
            "type": "object",
            "properties": {
                "tokens": {
                    "$ref": "#/definitions/outputs.TokensMap"
                },
                "user": {
                    "$ref": "#/definitions/models.PublicUser"
                }
            }
        },
        "outputs.ProductWithChars": {
            "type": "object",
            "properties": {
                "chars": {
                    "$ref": "#/definitions/outputs.RestCharsObject"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                }
            }
        },
        "outputs.RestCharsComponent": {
            "type": "object",
            "properties": {
                "info": {},
                "type": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CharsDescription"
                    }
                }
            }
        },
        "outputs.RestCharsObject": {
            "type": "object",
            "properties": {
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/outputs.RestCharsComponent"
                    }
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "outputs.TokensMap": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
