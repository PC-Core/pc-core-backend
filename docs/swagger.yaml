definitions:
  controllers.SingleAccessToken:
    properties:
      access_token:
        type: string
    type: object
  inputs.AddLaptopInput:
    properties:
      cpu:
        type: string
      gpu:
        type: string
      name:
        type: string
      price:
        type: number
      ram:
        type: integer
      stock:
        type: integer
    type: object
  inputs.LoginUserInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  inputs.RegisterUserInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Category:
    properties:
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      slug:
        type: string
      title:
        type: string
    type: object
  models.LaptopChars:
    properties:
      cpu:
        type: string
      gpu:
        type: string
      id:
        type: integer
      ram:
        type: integer
    type: object
  models.Product:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      selled:
        type: integer
      stock:
        type: integer
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      user_role:
        $ref: '#/definitions/models.UserRole'
    type: object
  models.UserRole:
    enum:
    - Default
    type: string
    x-enum-varnames:
    - Default
  outputs.JWTPair:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/jwt/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: User's refresh token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.SingleAccessToken'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Update Access JWT token
      tags:
      - jwt
  /categories/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get all categories
      tags:
      - categories
  /laptops/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Laptop data
        in: body
        name: laptop
        required: true
        schema:
          $ref: '#/definitions/inputs.AddLaptopInput'
      - description: access token for user with Admin role
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
      summary: Add a new laptop
      tags:
      - laptops
  /laptops/chars/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Laptop id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LaptopChars'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get laptop chars
      tags:
      - laptops
  /products/:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: count
        type: integer
      - in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get products from page N in quantity M
      tags:
      - products
  /products/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Get a single product by ID
      tags:
      - products
  /users/login:
    get:
      consumes:
      - application/json
      parameters:
      - description: User data to login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/inputs.LoginUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outputs.JWTPair'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Login
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User data to register
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/inputs.RegisterUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Register a new User
      tags:
      - users
swagger: "2.0"
